services:
  gradio_app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: gradio_app
    environment:
      - HF_ACCESS_TOKEN=${HF_ACCESS_TOKEN}
      - PROMETHEUS_PORT=8000
      - GRADIO_PORT=7860
    ports:
      - "7860:7860"  # Gradio Application
      - "8000:8000"  # Prometheus Metrics
      - "9100:9100"  # Prometheus Node Exporter
    volumes:
      - ./logs/server.log:/var/log/server.log
      - ./logs/node_exporter.log:/var/log/node_exporter.log
    networks:
      - monitoring_network
    restart: unless-stopped

  prometheus:
    build:
      context: ./prometheus
      dockerfile: Dockerfile
    container_name: prometheus
    ports:
      - "9090:9090"  # Prometheus Web UI
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring_network
    restart: unless-stopped
    depends_on:
      - gradio_app

  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    ports:
      - "3000:3000"  # Grafana Web UI
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning 
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_PSWD}  # Change this to a secure password
    networks:
      - monitoring_network
    restart: unless-stopped
    depends_on:
      - prometheus

  ngrok:
    build:
      context: ./ngrok
      dockerfile: Dockerfile
    container_name: ngrok
    ports:
      - "4040:4040"  # Ngrok Web Interface
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    volumes:
      - ./ngrok/ngrok.yml:/etc/ngrok/ngrok.yml
    networks:
      - monitoring_network
    restart: unless-stopped
    depends_on:
      - gradio_app

volumes:
  grafana_data:

networks:
  monitoring_network:
    driver: bridge
